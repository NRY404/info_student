{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport HomeView from '../views/Manage.vue';\nVue.use(VueRouter);\n/**\n * 使用递归来保证多层children的情况能够被遍历\n */\n\nfunction recursion(routes) {\n  var routeArr = routes.map(function (route) {\n    if (!route.component) {\n      var url = route.url;\n      route = {\n        path: route.path,\n        name: route.name,\n        component: function component() {\n          return import('../views/Manage.vue');\n        },\n        meta: route.meta\n      };\n    }\n\n    if (route.children) {\n      route.children = recursion(route.children);\n    }\n\n    return route;\n  });\n  return routeArr;\n}\n/**\n * @param {String} path: 路由路径\n * @param {String} name: 路由名称\n * @param {Any} component: 非懒加载页面\n * @param {Array} children: 子路由\n * @param {String} url: 懒加载页面地址\n */\n\n\nvar routerConfig = [{\n  path: \"/\",\n  name: \"home\",\n  component: function component() {\n    return import('../views/Manage.vue');\n  },\n  redirect: '/manage'\n}, {\n  path: \"/manage\",\n  name: '首页',\n  meta: {\n    title: '面包屑',\n    breadCrumd: [{\n      path: 'home',\n      name: '首页2',\n      component: function component() {\n        return import('../views/Home.vue');\n      }\n    }, {\n      path: '/userview',\n      name: '面包屑',\n      component: function component() {\n        return import('../views/UserView.vue');\n      }\n    }]\n  }\n}];\nvar routes = recursion(routerConfig);\nvar router = new VueRouter({\n  base: process.env.VUE_APP_PUBLICPATH,\n  saveScrollPosition: true,\n  mode: 'history',\n  routes: routes\n}); //能避免如蜜传如蜜导致错误\n\nvar originalPush = VueRouter.prototype.push;\n\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(function (err) {\n    return err;\n  });\n}; // const routes = [\n//   {\n//     path: '/manage',\n//     name: 'Manage',\n//     component: () => import('../views/Manage.vue'),\n//     redirect: '/manage/home',\n//     meta: {title:\"首页\",show:true},\n//     children: [ //子路由\n//       {\n//         path: 'home',\n//         name: '首页',\n//         component: () => import('../views/Home.vue'),\n//         meta: {title:\"首页\",show:true}\n//       },\n//       {\n//         path: 'UserView',\n//         name: '用户管理',\n//         component: () => import('../views/UserView.vue'),\n//         meta: {title:\"用户管理\",show:true}\n//       }\n//\n//     ]\n//   },\n//   {\n//     path: '/about',\n//     name: 'about',\n//     // route level code-splitting\n//     // this generates a separate chunk (about.[hash].js) for this route\n//     // which is lazy-loaded when the route is visited.\n//     component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n//   }\n// ]\n//\n// const router = new VueRouter({\n//   mode: 'history',\n//   base: process.env.BASE_URL,\n//   routes\n// })\n\n\nexport default router;","map":{"version":3,"sources":["G:/BaiduNetdiskDownload/springboot_vue/vue/src/router/index.js"],"names":["Vue","VueRouter","HomeView","use","recursion","routes","routeArr","map","route","component","url","path","name","meta","children","routerConfig","redirect","title","breadCrumd","router","base","process","env","VUE_APP_PUBLICPATH","saveScrollPosition","mode","originalPush","prototype","push","location","call","catch","err"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,SAAR;AAEA;AACA;AACA;;AACI,SAASG,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,MAAIC,QAAQ,GAAGD,MAAM,CAACE,GAAP,CAAW,UAAAC,KAAK,EAAI;AACjC,QAAI,CAACA,KAAK,CAACC,SAAX,EAAsB;AACpB,UAAIC,GAAG,GAAGF,KAAK,CAACE,GAAhB;AACAF,MAAAA,KAAK,GAAG;AACNG,QAAAA,IAAI,EAAEH,KAAK,CAACG,IADN;AAENC,QAAAA,IAAI,EAAEJ,KAAK,CAACI,IAFN;AAGJH,QAAAA,SAAS,EAAE;AAAA,iBAAM,OAAO,qBAAP,CAAN;AAAA,SAHP;AAINI,QAAAA,IAAI,EAAEL,KAAK,CAACK;AAJN,OAAR;AAMD;;AACD,QAAIL,KAAK,CAACM,QAAV,EAAoB;AAClBN,MAAAA,KAAK,CAACM,QAAN,GAAiBV,SAAS,CAACI,KAAK,CAACM,QAAP,CAA1B;AACD;;AACD,WAAON,KAAP;AACD,GAdc,CAAf;AAeA,SAAOF,QAAP;AACD;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,IAAIS,YAAY,GAAG,CAAC;AAClBJ,EAAAA,IAAI,EAAE,GADY;AAElBC,EAAAA,IAAI,EAAE,MAFY;AAGlBH,EAAAA,SAAS,EAAE;AAAA,WAAM,OAAO,qBAAP,CAAN;AAAA,GAHO;AAIlBO,EAAAA,QAAQ,EAAE;AAJQ,CAAD,EAMnB;AACEL,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,IAAI,EAAE,IAFR;AAGEC,EAAAA,IAAI,EAAE;AACJI,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,UAAU,EAAE,CAAC;AACXP,MAAAA,IAAI,EAAE,MADK;AAEXC,MAAAA,IAAI,EAAE,KAFK;AAGXH,MAAAA,SAAS,EAAE;AAAA,eAAM,OAAO,mBAAP,CAAN;AAAA;AAHA,KAAD,EAKV;AACEE,MAAAA,IAAI,EAAE,WADR;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEH,MAAAA,SAAS,EAAE;AAAA,eAAM,OAAO,uBAAP,CAAN;AAAA;AAHb,KALU;AAFR;AAHR,CANmB,CAAnB;AAyBA,IAAIJ,MAAM,GAAGD,SAAS,CAACW,YAAD,CAAtB;AAEA,IAAMI,MAAM,GAAG,IAAIlB,SAAJ,CAAc;AAC3BmB,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADS;AAE3BC,EAAAA,kBAAkB,EAAE,IAFO;AAG3BC,EAAAA,IAAI,EAAE,SAHqB;AAI3BpB,EAAAA,MAAM,EAANA;AAJ2B,CAAd,CAAf,C,CAOA;;AACA,IAAMqB,YAAY,GAAGzB,SAAS,CAAC0B,SAAV,CAAoBC,IAAzC;;AACA3B,SAAS,CAAC0B,SAAV,CAAoBC,IAApB,GAA2B,SAASA,IAAT,CAAcC,QAAd,EAAwB;AACjD,SAAOH,YAAY,CAACI,IAAb,CAAkB,IAAlB,EAAwBD,QAAxB,EAAkCE,KAAlC,CAAwC,UAAAC,GAAG;AAAA,WAAIA,GAAJ;AAAA,GAA3C,CAAP;AACD,CAFD,C,CAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeb,MAAf","sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport HomeView from '../views/Manage.vue'\n\nVue.use(VueRouter);\n\n/**\n * 使用递归来保证多层children的情况能够被遍历\n */\n    function recursion(routes) {\n      let routeArr = routes.map(route => {\n        if (!route.component) {\n          let url = route.url;\n          route = {\n            path: route.path,\n            name: route.name,\n              component: () => import('../views/Manage.vue'),\n            meta: route.meta\n          };\n        }\n        if (route.children) {\n          route.children = recursion(route.children);\n        }\n        return route;\n      });\n      return routeArr;\n    }\n\n/**\n * @param {String} path: 路由路径\n * @param {String} name: 路由名称\n * @param {Any} component: 非懒加载页面\n * @param {Array} children: 子路由\n * @param {String} url: 懒加载页面地址\n */\n    let routerConfig = [{\n      path: \"/\",\n      name: \"home\",\n      component: () => import('../views/Manage.vue'),\n      redirect: '/manage',\n    },\n    {\n      path: \"/manage\",\n      name: '首页',\n      meta: {\n        title: '面包屑',\n        breadCrumd: [{\n          path: 'home',\n          name: '首页2',\n          component: () => import('../views/Home.vue'),\n        },\n          {\n            path: '/userview',\n            name: '面包屑',\n            component: () => import('../views/UserView.vue'),\n          }\n        ]\n      }\n    }];\n\n    let routes = recursion(routerConfig);\n\n    const router = new VueRouter({\n      base: process.env.VUE_APP_PUBLICPATH,\n      saveScrollPosition: true,\n      mode: 'history',\n      routes\n    })\n\n    //能避免如蜜传如蜜导致错误\n    const originalPush = VueRouter.prototype.push;\n    VueRouter.prototype.push = function push(location) {\n      return originalPush.call(this, location).catch(err => err)\n    };\n\n\n// const routes = [\n//   {\n//     path: '/manage',\n//     name: 'Manage',\n//     component: () => import('../views/Manage.vue'),\n//     redirect: '/manage/home',\n//     meta: {title:\"首页\",show:true},\n//     children: [ //子路由\n//       {\n//         path: 'home',\n//         name: '首页',\n//         component: () => import('../views/Home.vue'),\n//         meta: {title:\"首页\",show:true}\n//       },\n//       {\n//         path: 'UserView',\n//         name: '用户管理',\n//         component: () => import('../views/UserView.vue'),\n//         meta: {title:\"用户管理\",show:true}\n//       }\n//\n//     ]\n//   },\n//   {\n//     path: '/about',\n//     name: 'about',\n//     // route level code-splitting\n//     // this generates a separate chunk (about.[hash].js) for this route\n//     // which is lazy-loaded when the route is visited.\n//     component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n//   }\n// ]\n//\n// const router = new VueRouter({\n//   mode: 'history',\n//   base: process.env.BASE_URL,\n//   routes\n// })\n\nexport default router\n"]},"metadata":{},"sourceType":"module"}