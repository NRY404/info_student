{"ast":null,"code":"import \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import request from \"../utils/request\";\nimport Aside from \"../components/Aside\";\nimport Header from \"../components/Header\";\nimport UserView from \"./UserView\";\nexport default {\n  name: 'HomeManage',\n  data: function data() {\n    return {\n      collapseBtnClass: 'el-icon-s-fold',\n      //收缩图标\n      isCollapse: false,\n      sideWidth: 200,\n      logoTextShow: true,\n      breadList: [] // 路由集合\n\n    };\n  },\n  watch: {\n    $route: function $route(route) {\n      if (route.path.startsWith('/redirect/')) {\n        return;\n      }\n\n      this.getBreadcrumb();\n    }\n  },\n  //\n  components: {\n    Aside: Aside,\n    Header: Header,\n    UserView: UserView\n  },\n  methods: {\n    //点击收缩按钮，触发\n    collapse: function collapse() {\n      this.isCollapse = !this.isCollapse;\n\n      if (this.isCollapse) {\n        //收缩\n        this.sideWidth = 64;\n        this.logoTextShow = false;\n        this.collapseBtnClass = 'el-icon-s-unfold';\n      } else {\n        //展开\n        this.sideWidth = 200;\n        this.logoTextShow = true;\n        this.collapseBtnClass = 'el-icon-s-fold';\n      }\n    },\n    pathCompile: function pathCompile(path) {\n      var params = this.$route.params;\n\n      var pathToRegexp = require('path-to-regexp');\n\n      var toPath = pathToRegexp.compile(path);\n      return toPath(params);\n    },\n    handleLink: function handleLink(item) {\n      var redirect = item.redirect,\n          path = item.path;\n\n      if (redirect) {\n        this.$router.push(redirect);\n        return;\n      }\n\n      this.$router.push(this.pathCompile(path));\n    },\n    isHome: function isHome(route) {\n      return route.name === \"home\";\n    },\n    getBreadcrumb: function getBreadcrumb() {\n      var res_data = new Map();\n      var matched = this.$route.matched;\n\n      if (matched[0].path === \"\" && matched[1].path === \"/home\") {\n        matched = [{\n          path: \"/\",\n          meta: {\n            title: \"首页\"\n          }\n        }];\n      } else {\n        matched = [{\n          path: \"/\",\n          meta: {\n            title: \"首页\"\n          }\n        }].concat(matched);\n        this.breadList = matched.filter(function (item) {\n          return item.meta && item.meta.title && item.meta.breadcrumb !== false;\n        });\n        var list = this.breadList.filter(function (arr) {\n          return !res_data.has(arr.meta.title) && res_data.set(arr.meta.title, 1);\n        });\n        console.log(list);\n        this.breadList = list;\n        return;\n      }\n\n      this.breadList = matched;\n    }\n  },\n  mounted: function mounted() {\n    this.getBreadcrumb();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AAGA;AACAA,oBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,wCADA;AACA;AACAC,uBAFA;AAGAC,oBAHA;AAIAC,wBAJA;AAKAC,mBALA,CAKA;;AALA;AAOA,GAVA;AAYAC;AACAC,UADA,kBACAC,KADA,EACA;AACA;AACA;AACA;;AACA;AACA;AANA,GAZA;AAsBA;AACAC;AACAC,gBADA;AAEAC,kBAFA;AAGAC;AAHA,GAvBA;AA6BAC;AACA;AACAC,YAFA,sBAEA;AACA;;AACA;AAAA;AACA;AACA;AACA;AAEA,OALA,MAKA;AAAA;AACA;AACA;AACA;AACA;AACA,KAdA;AAeAC,eAfA,uBAeAC,IAfA,EAeA;AACA;;AACA;;AACA;AACA;AACA,KApBA;AAqBAC,cArBA,sBAqBAC,IArBA,EAqBA;AACA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA,KA5BA;AA6BAC,UA7BA,kBA6BAX,KA7BA,EA6BA;AACA;AACA,KA/BA;AAgCAY,iBAhCA,2BAgCA;AACA;AACA;;AACA;AACAC;AAAAL;AAAAM;AAAAC;AAAA;AAAA;AACA,OAFA,MAEA;AACAF;AAAAL;AAAAM;AAAAC;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACAC;AACA;AACA;AACA;;AAEA;AACA;AA/CA,GA7BA;AA+EAC,SA/EA,qBA+EA;AACA;AACA;AAjFA","names":["name","data","collapseBtnClass","isCollapse","sideWidth","logoTextShow","breadList","watch","$route","route","components","Aside","Header","UserView","methods","collapse","pathCompile","path","handleLink","item","isHome","getBreadcrumb","matched","meta","title","console","mounted"],"sourceRoot":"src/views","sources":["Manage.vue"],"sourcesContent":["<template>\n    <div class=\"home\" style=\"height: 100%;\">\n        <el-container style=\"height: 100%;\">\n            <!--      左侧导航栏-->\n            <el-aside class=\"el-aside\" :width=\"sideWidth+'px'\" style=\" height: 100%;\">\n                <Aside :is-collapse=\"isCollapse\" :logoTextShow=\"logoTextShow\"></Aside>\n            </el-aside>\n\n            <!--      右侧内容-->\n            <el-container>\n                <!--        头部-->\n                <el-header class=\"el-header\">\n                    <Header :collapseBtnClass=\"collapseBtnClass\" :collapse=\"collapse\"></Header>\n                </el-header>\n\n                <!--        面包屑-->\n                <div class=\"example-container\">\n                    <el-breadcrumb separator=\">\" style=\"margin-top: 10px;\">\n                        <el-breadcrumb-item v-for=\"(item, index) in breadList\" :key=\"index\" >\n                            当前位置：<span v-if=\"item.redirect==='home'||index===breadList.length-1\" class=\"no-redirect\">{{ item.meta.title }}</span>\n                            <a v-else @click.prevent=\"handleLink(item)\" >{{ item.meta.title }}</a>\n                        </el-breadcrumb-item>\n                    </el-breadcrumb>\n                </div>\n                <!--        右侧列表-->\n                <el-main>\n<!--                    表示当前页面的子路由 会在 router-view 里面显示-->\n                    <router-view />\n                </el-main>\n\n            </el-container>\n        </el-container>\n    </div>\n</template>\n\n<style>\n    .el-header {\n        background-color: #B3C0D1;\n        color: #333;\n        line-height: 60px;\n    }\n\n</style>\n\n<script>\n\n    // import request from \"../utils/request\";\n    import Aside from \"../components/Aside\";\n    import Header from \"../components/Header\";\n    import UserView from \"./UserView\";\n\n\n    export default {\n        name: 'HomeManage',\n        data(){\n            return{\n                collapseBtnClass:'el-icon-s-fold',//收缩图标\n                isCollapse:false,\n                sideWidth:200,\n                logoTextShow: true,\n                breadList: [ ] // 路由集合\n            }\n        },\n\n        watch: {\n            $route(route) {\n                if (route.path.startsWith('/redirect/')) {\n                    return\n                }\n                this.getBreadcrumb();\n            }\n        },\n\n\n        //\n        components:{\n            Aside,\n            Header,\n            UserView\n        },\n\n        methods:{\n            //点击收缩按钮，触发\n            collapse(){\n                this.isCollapse = !this.isCollapse;\n                if (this.isCollapse){//收缩\n                    this.sideWidth = 64;\n                    this.logoTextShow = false;\n                    this.collapseBtnClass = 'el-icon-s-unfold'\n\n                }else{    //展开\n                    this.sideWidth = 200;\n                    this.logoTextShow = true;\n                    this.collapseBtnClass = 'el-icon-s-fold'\n                }\n            },\n            pathCompile(path) {\n                const { params } = this.$route;\n                const pathToRegexp = require('path-to-regexp');\n                var toPath = pathToRegexp.compile(path);\n                return toPath(params)\n            },\n            handleLink(item) {\n                const { redirect, path } = item;\n                if (redirect) {\n                    this.$router.push(redirect);\n                    return\n                }\n                this.$router.push(this.pathCompile(path))\n            },\n            isHome(route) {\n                return route.name === \"home\";\n            },\n            getBreadcrumb() {\n                const res_data = new Map();\n                let matched = this.$route.matched;\n                if (matched[0].path === \"\" && matched[1].path === \"/home\") {\n                    matched = [{ path: \"/\", meta: { title: \"首页\" } }];\n                } else {\n                    matched = [{ path: \"/\", meta: { title: \"首页\" } }].concat(matched);\n                    this.breadList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false);\n                    let list =  this.breadList.filter((arr) => !res_data.has(arr.meta.title) && res_data.set(arr.meta.title, 1));\n                    console.log(list);\n                    this.breadList = list;\n                    return\n                }\n\n                this.breadList = matched;\n            }\n        },\n\n        mounted() {\n            this.getBreadcrumb();\n        }\n\n    }\n</script>\n"]},"metadata":{},"sourceType":"module"}